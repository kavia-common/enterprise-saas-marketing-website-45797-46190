{"is_source_file": true, "format": "TypeScript (TSX)", "description": "This file implements server-side request handling for a Remix web application. It manages HTTP responses, including CORS headers, and provides server rendering with streaming for both bot and browser requests using React and Remix libraries.", "external_files": ["@remix-run/node", "@remix-run/react", "isbot", "react-dom/server"], "external_methods": ["createReadableStreamFromReadable", "renderToPipeableStream"], "published": ["handleRequest"], "classes": [], "methods": [{"name": "handleRequest", "description": "Main entry point that dispatches requests based on method and user-agent, setting CORS headers and delegating to bot or browser handlers."}, {"name": "handleBotRequest", "description": "Handles server-side rendering and streaming response for bot requests, utilizing React's renderToPipeableStream with onAllReady and error callbacks."}, {"name": "handleBrowserRequest", "description": "Handles server-side rendering and streaming response for browser requests, similar to handleBotRequest but triggered when user-agent is not a bot."}], "calls": ["renderToPipeableStream", "createReadableStreamFromReadable", "responseHeaders.set", "request.headers.get", "new Response", "pipe", "setTimeout", "console.error"], "search-terms": ["entry.server.tsx", "Remix server-side handler", "streaming server rendering", "bot detection", "handleRequest function", "React Remix streaming"], "state": 2, "file_id": 7, "knowledge_revision": 25, "git_revision": "5073f50b8528e104e131512e94d8c21f31a25d00", "ctags": [], "hash": "ea3fdec8a39ab86ca67d22f9ecc48c65", "format-version": 4, "code-base-name": "frontend_marketing_site", "filename": "frontend_marketing_site/app/entry.server.tsx", "revision_history": [{"25": "5073f50b8528e104e131512e94d8c21f31a25d00"}]}